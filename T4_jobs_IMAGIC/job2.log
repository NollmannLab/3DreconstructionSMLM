! 
! 
! ====================== 
! IMAGIC ACCUMULATE FILE 
! ====================== 
! 
! 
! IMAGIC program: mralign ----------------------------------------------
! 

 20-07-2016 18:42:26 ** MRALIGN (vs. 2-May-2014) running **
  
Use MPI parallelisation [YES]                      :  YES
Number of processors to be used [3]                :  8
 
MRA options:
  FRESH  ADD_NEW_REFS  LOCAL_SEARCH
Please specify option [FRESH]                      :  FRESH
 
4D options:
  ALL_REFERENCES  OWN_REF3D_REFERENCES
Please specify option [ALL_REFERENCES]             :  ALL_REFERENCES
 
Methods available:
  ALIGNMENT  CORRELATION_ONLY
Please specify option [ALIGNMENT]                  :  ALIGNMENT
 
Alignment modes available:
  HORIZONTAL            VERTICAL
  TRANSLATIONAL         ROTATIONAL
  BOTH (ROT AND TRANS)  BRUTE_FORCE
Please specify option [BOTH (ROT AND TRANS)]       :  BOTH (ROT AND TRANS)
 
Options available:
  ROTATION_FIRST  TRANSLATION_FIRST
Please specify option [ROTATION_FIRST]             :  ROTATION_FIRST
 
Correlation functions available:
  CCF  MCF
Please specify option [CCF]                        :  CCF
Input file, image loc#s [my_images]                :  all-nc
Output file, loc#s [my_align]                      :  all-alig1
Original (pre-treated) file, loc#s [my_filt]       :  all-n
Reference file, loc#s [my_ref]                     :  mra-ref1n
 
Options to filter the reference(s):
  NO_FILTER                 LOWPASS_FILTER
  BANDPASS_FILTER           CUT_OFF_HIGH_FREQUENCIES
Please specify option [NO_FILTER]                  :  NO_FILTER
Max shift (compared to original images) [0.2]      :  0.2
Max shift (during this alignment) [0.05]           :  0.05
Min, max rot. angle (compared to originals)
[-180,180]                                         :  -180,180
Min, max rot. angle (for this alignment)
[-180,180]                                         :  -180,180
 
Precision for rotational alignment:
  LOW  MEDIUM  HIGH  INTERACTIVE
Please specify option [LOW]                        :  HIGH
Min,max radius for rot alignment [0.0,0.7]         :  0.0,0.6
Number of alignment iterations [5]                 :  5
Full output of all parameters [NO]                 :  NO

 20-07-2016 18:42:26 ** Starting multi-reference alignment
 
                        Number crunching processes: 1 - 7
 
 
 20-07-2016 18:42:26 ** Using references  1 to 18 (loc#s 1 to 18)
 
 20-07-2016 18:42:27 ** Alignment locs #    1, 579 (process 1)
 20-07-2016 18:42:27 ** Alignment locs #  580,1075 (process 2)
 20-07-2016 18:42:27 ** Alignment locs # 1549,1992 (process 4)
 20-07-2016 18:42:27 ** Alignment locs # 1993,2412 (process 5)
 20-07-2016 18:42:27 ** Alignment locs # 1076,1548 (process 3)
 20-07-2016 18:42:27 ** Alignment locs # 2413,2811 (process 6)
 20-07-2016 18:42:27 ** Alignment locs # 2812,3190 (process 7)
 20-07-2016 18:44:38 ** Alignment locs # 3191,3579 (process 7)
 20-07-2016 18:44:43 ** Alignment locs # 3580,3991 (process 6)
 20-07-2016 18:44:50 ** Alignment locs # 3992,4053 (process 5)
 
 20-07-2016 18:46:55 ** Alignment finished for all processes
 
 
Image name: stack.mrc (NORMVAR)
Size: 100, 100  Loc: 1  Type: REAL  Cre.Date: 20-Jul-2016  Time: 18:45:40
EM2EM;ALIMASS/TOTCENTER;
 
Image name: stack.mrc (NORMVAR)
Size: 100, 100  Loc: 4053  Type: REAL  Cre.Date: 20-Jul-2016  Time: 18:45:11
EM2EM;ALIMASS/TOTCENTER;MRALIGN/ALIGN(18REFS);
 
 
 Histogram of reference numbers from all-alig1:
 
   21   0 |***
  125   1 |*******************
  431   2 |*******************************************************************
  313   3 |************************************************
  138   4 |*********************
  251   5 |***************************************
  389   6 |************************************************************
  341   7 |*****************************************************
  344   8 |*****************************************************
   43   9 |*******
  140  10 |**********************
  439  11 |********************************************************************
  362  12 |********************************************************
  128  13 |********************
    8  14 |*
   20  15 |***
  139  16 |**********************
  308  17 |************************************************
  113  18 |******************
    0  19 |
    0  20 |
 
 Meaning of columns: # in this bin, bin value
 
 
 Histogram of 3D reference numbers from all-alig1:
 
    0  <1 |
    0   0 |
 4032   1 |********************************************************************
    0   2 |
    0   3 |
    2  <3 |
 
 Meaning of columns: # in this bin, bin value
 
 
 
 M-R-A results:
 ==============
 
 Average shift              : 2.2225858
 Average rotation           : 75.1346573
 Average corr.coeff (CCC)   : -4.6452932
 Best CCC                   : 0.7454451
 Location # of best CCC     : 3181
 
 
 M-R-A files:
 ============
 
 Input images for alignment : all-nc
 Aligned to references      : mra-ref1n
 Original images            : all-n
 Aligned output images      : all-alig1
 
 
 Some useful follow-up IMAGIC commands: 
 ======================================
 
 DISPLAY                    to visually check the alignment
 MSA-RUN                    to calculate MSA classification
 M-R-A                      to add references etc.
 EXTRACT-ALIGNED-IMAGES     to extract/sum images 'belonging'
                            to a given reference
 SUM-ALIGNED-IMAGES         to sum images 'belonging' to a
                            given reference
 INCORE-SUM                 to sum (some) aligned images
 EXCLUSIVE-COPY             to extract/sort aligned images
 ...


 20-07-2016 18:46:57 ** Finished MRALIGN
 
 
Next IMAGIC command suggested: MSA-RUN
! IMAGIC program: mralign ----------------------------------------------
! 

 20-07-2016 18:46:59 ** MRALIGN (vs. 2-May-2014) running **
  
Use MPI parallelisation [YES]                      :  YES
Number of processors to be used [3]                :  8
 
MRA options:
  FRESH  ADD_NEW_REFS  LOCAL_SEARCH
Please specify option [FRESH]                      :  FRESH
 
4D options:
  ALL_REFERENCES  OWN_REF3D_REFERENCES
Please specify option [ALL_REFERENCES]             :  ALL_REFERENCES
 
Methods available:
  ALIGNMENT  CORRELATION_ONLY
Please specify option [ALIGNMENT]                  :  ALIGNMENT
 
Alignment modes available:
  HORIZONTAL            VERTICAL
  TRANSLATIONAL         ROTATIONAL
  BOTH (ROT AND TRANS)  BRUTE_FORCE
Please specify option [BOTH (ROT AND TRANS)]       :  BOTH (ROT AND TRANS)
 
Options available:
  ROTATION_FIRST  TRANSLATION_FIRST
Please specify option [ROTATION_FIRST]             :  ROTATION_FIRST
 
Correlation functions available:
  CCF  MCF
Please specify option [CCF]                        :  CCF
Input file, image loc#s [my_images]                :  all-alig1
Output file, loc#s [my_align]                      :  all-alig2
Original (pre-treated) file, loc#s [my_filt]       :  all-n
Reference file, loc#s [my_ref]                     :  mra-ref1n
 
Options to filter the reference(s):
  NO_FILTER                 LOWPASS_FILTER
  BANDPASS_FILTER           CUT_OFF_HIGH_FREQUENCIES
Please specify option [NO_FILTER]                  :  NO_FILTER
Max shift (compared to original images) [0.2]      :  0.2
Max shift (during this alignment) [0.05]           :  0.05
Min, max rot. angle (compared to originals)
[-180,180]                                         :  -180,180
Min, max rot. angle (for this alignment)
[-180,180]                                         :  -180,180
 
Precision for rotational alignment:
  LOW  MEDIUM  HIGH  INTERACTIVE
Please specify option [LOW]                        :  HIGH
Min,max radius for rot alignment [0.0,0.7]         :  0.0,0.6
Number of alignment iterations [5]                 :  5
Full output of all parameters [NO]                 :  NO

 20-07-2016 18:46:59 ** Starting multi-reference alignment
 
                        Number crunching processes: 1 - 7
 
 
 20-07-2016 18:46:59 ** Using references  1 to 18 (loc#s 1 to 18)
 
 20-07-2016 18:47:00 ** Alignment locs #    1, 579 (process 1)
 20-07-2016 18:47:00 ** Alignment locs #  580,1075 (process 2)
 20-07-2016 18:47:00 ** Alignment locs # 1076,1548 (process 3)
 20-07-2016 18:47:00 ** Alignment locs # 1549,1992 (process 4)
 20-07-2016 18:47:02 ** Alignment locs # 1993,2412 (process 5)
 20-07-2016 18:47:02 ** Alignment locs # 2413,2811 (process 6)
 20-07-2016 18:47:02 ** Alignment locs # 2812,3190 (process 7)
 20-07-2016 18:49:07 ** Alignment locs # 3191,3579 (process 7)
 20-07-2016 18:49:09 ** Alignment locs # 3580,3991 (process 6)
 20-07-2016 18:49:17 ** Alignment locs # 3992,4053 (process 5)
 
 20-07-2016 18:51:16 ** Alignment finished for all processes
 
 
Image name: stack.mrc (NORMVAR)
Size: 100, 100  Loc: 1  Type: REAL  Cre.Date: 20-Jul-2016  Time: 18:50:02
EM2EM;ALIMASS/TOTCENTER;MRALIGN/ALIGN(18REFS);
 
Image name: stack.mrc (NORMVAR)
Size: 100, 100  Loc: 4053  Type: REAL  Cre.Date: 20-Jul-2016  Time: 18:49:37
EM2EM;ALIMASS/TOTCENTER;MRALIGN/ALIGN(18REFS);MRALIGN/ALIGN(18REFS);
 
 
 Histogram of reference numbers from all-alig2:
 
   28   0 |***
   86   1 |**********
  214   2 |*************************
  217   3 |**************************
  347   4 |*****************************************
  477   5 |*********************************************************
  562   6 |*******************************************************************
  573   7 |********************************************************************
  244   8 |*****************************
   28   9 |***
  104  10 |************
  184  11 |**********************
  226  12 |***************************
  218  13 |**************************
    9  14 |*
   16  15 |**
  235  16 |****************************
  228  17 |***************************
   57  18 |*******
    0  19 |
    0  20 |
 
 Meaning of columns: # in this bin, bin value
 
 
 Histogram of 3D reference numbers from all-alig2:
 
    6  <1 |
    6   0 |
 4025   1 |********************************************************************
    0   2 |
    0   3 |
    3  <3 |
 
 Meaning of columns: # in this bin, bin value
 
 
 
 M-R-A results:
 ==============
 
 Average shift              : 1.447549
 Average rotation           : 21.3272919
 Average corr.coeff (CCC)   : -6.325444
 Best CCC                   : 0.7529526
 Location # of best CCC     : 3181
 
 
 M-R-A files:
 ============
 
 Input images for alignment : all-alig1
 Aligned to references      : mra-ref1n
 Original images            : all-n
 Aligned output images      : all-alig2
 
 
 Some useful follow-up IMAGIC commands: 
 ======================================
 
 DISPLAY                    to visually check the alignment
 MSA-RUN                    to calculate MSA classification
 M-R-A                      to add references etc.
 EXTRACT-ALIGNED-IMAGES     to extract/sum images 'belonging'
                            to a given reference
 SUM-ALIGNED-IMAGES         to sum images 'belonging' to a
                            given reference
 INCORE-SUM                 to sum (some) aligned images
 EXCLUSIVE-COPY             to extract/sort aligned images
 ...


 20-07-2016 18:51:19 ** Finished MRALIGN
 
 
Next IMAGIC command suggested: MSA-RUN
! 
! IMAGIC program: msa --------------------------------------------------
! 

 20-07-2016 18:51:21 ** MSA (vs. 11-Jan-2014) running **
  
Use MPI parallelisation [YES]                      :  YES
Number of processors to be used [3]                :  8
 
Use of local scratch files:
  SPECIFY_LOCAL_FILES  RAM_DISKS
  NO_LOCAL_FILES
Please specify option [SPECIFY_LOCAL_FILES]        :  NO
 
Choose mode of operation:
  FRESH_MSA  REFINE
Please specify option [FRESH_MSA]                  :  FRESH_MSA
 
MSA distances:
  EUCLIDIAN  CHISQUARE  MODULATION
Please specify option [MODULATION]                 :  MODULATION
Input (= output) file (aligned "images") [my_ali]  :  all-alig2
Input MSA mask file [my_msamask]                   :  msamask
Eigenimages output file, NO loc#s [my_eigenim]     :  eigenim-2
Use default answers for other MSA options [YES]    :  YES
Number of iterations [50]                          :  50
Number of eigenimages [100]                        :  50
Rootname for results files, NO ext. [my_msa]       :  msa-2
 

 20-07-2016 18:51:21 ** Starting MSA

 20-07-2016 18:51:23 ** Starting eigenimage calculations
 
                        Number crunching processes: 1 - 7
 
 20-07-2016 18:51:25 ** Sum of higher eigenvalues after iter #  1: 91.6024745
 20-07-2016 18:51:28 ** Sum of higher eigenvalues after iter #  2: 110.0358318
 20-07-2016 18:51:30 ** Sum of higher eigenvalues after iter #  3: 100.6393354
 20-07-2016 18:51:32 ** Sum of higher eigenvalues after iter #  4: 99.7644209
 20-07-2016 18:51:34 ** Sum of higher eigenvalues after iter #  5: 98.4214298
 20-07-2016 18:51:37 ** Sum of higher eigenvalues after iter #  6: 97.39269
 20-07-2016 18:51:39 ** Sum of higher eigenvalues after iter #  7: 97.1432917
 20-07-2016 18:51:41 ** Sum of higher eigenvalues after iter #  8: 96.884893
 20-07-2016 18:51:44 ** Sum of higher eigenvalues after iter #  9: 96.6389717
 20-07-2016 18:51:46 ** Sum of higher eigenvalues after iter # 10: 96.4421491
 20-07-2016 18:51:49 ** Sum of higher eigenvalues after iter # 11: 96.3589076
 20-07-2016 18:51:51 ** Sum of higher eigenvalues after iter # 12: 96.2359383
 20-07-2016 18:51:54 ** Sum of higher eigenvalues after iter # 13: 96.1781784
 20-07-2016 18:51:56 ** Sum of higher eigenvalues after iter # 14: 96.1124654
 20-07-2016 18:51:59 ** Sum of higher eigenvalues after iter # 15: 96.1020218
 20-07-2016 18:52:01 ** Sum of higher eigenvalues after iter # 16: 96.1355352
 20-07-2016 18:52:04 ** Sum of higher eigenvalues after iter # 17: 96.1478225
 20-07-2016 18:52:06 ** Sum of higher eigenvalues after iter # 18: 96.1867684
 20-07-2016 18:52:09 ** Sum of higher eigenvalues after iter # 19: 96.2163246
 20-07-2016 18:52:11 ** Sum of higher eigenvalues after iter # 20: 96.2371684
 20-07-2016 18:52:13 ** Sum of higher eigenvalues after iter # 21: 96.2653034
 20-07-2016 18:52:16 ** Sum of higher eigenvalues after iter # 22: 96.3046253
 20-07-2016 18:52:18 ** Sum of higher eigenvalues after iter # 23: 96.3196365
 20-07-2016 18:52:21 ** Sum of higher eigenvalues after iter # 24: 96.3431979
 20-07-2016 18:52:23 ** Sum of higher eigenvalues after iter # 25: 96.3603177
 20-07-2016 18:52:26 ** Sum of higher eigenvalues after iter # 26: 96.3669067
 20-07-2016 18:52:28 ** Sum of higher eigenvalues after iter # 27: 96.3699891
 20-07-2016 18:52:30 ** Sum of higher eigenvalues after iter # 28: 96.3719878
 20-07-2016 18:52:33 ** Sum of higher eigenvalues after iter # 29: 96.3732369
 20-07-2016 18:52:35 ** Sum of higher eigenvalues after iter # 30: 96.3740814
 20-07-2016 18:52:38 ** Sum of higher eigenvalues after iter # 31: 96.3746842
 20-07-2016 18:52:40 ** Sum of higher eigenvalues after iter # 32: 96.3751343
 20-07-2016 18:52:43 ** Sum of higher eigenvalues after iter # 33: 96.3754821
 20-07-2016 18:52:45 ** Sum of higher eigenvalues after iter # 34: 96.3757579
 20-07-2016 18:52:48 ** Sum of higher eigenvalues after iter # 35: 96.3759809
 20-07-2016 18:52:50 ** Sum of higher eigenvalues after iter # 36: 96.3761636
 20-07-2016 18:52:52 ** Sum of higher eigenvalues after iter # 37: 96.376315

 20-07-2016 18:52:54 ** Eigenvectors are stable. MSA will stop soon

 20-07-2016 18:52:55 ** Now calculating image coordinates

 20-07-2016 18:52:58 ** Finished MSA
 
 
 The results have been stored in the following files: 
 ====================================================
 
 MSA header values updated in : all-alig2
 Eigenimages                  : eigenim-2
 Pixel coordinates            : msa-2_pixvec_coord
 Eigenpixel vectors           : msa-2_eigen_pixel
 M metric file                : msa-2_m_metric
 N metric file                : msa-2_n_metric
 Results text (listing) file  : msa-2.lis
 Convergence plot file        : msa-2.plt
 
 
Next IMAGIC command suggested: MSA-CLASSIFY
! 
! IMAGIC program: classify ---------------------------------------------
! 

 20-07-2016 18:52:58 ** CLASSIFY (vs. 21-Feb-2014) running **
  
 
Input to be classified:
  IMAGES/VOLUMES   PIXEL-VECTORS    SEQUENCES
  FABOSA-CONTOURS
Please specify option [IMAGES/VOLUMES]             :  IMAGES/VOLUMES
Input (=output) header file (used in MSA-RUN)
[my_ali]                                           :  all-alig2
Percentage of images to be ignored [0]             :  0
Active eigenimages for classification [100]        :  50
Use default classification options [YES]           :  YES
What number of classes do you wish                 :  200
Rootname of output files [my_classify]             :  classes-2-200

 20-07-2016 18:52:58 ** Reading eigenvalues/eigenimages and coordinates

 20-07-2016 18:52:58 ** Finding first distance matrix

 20-07-2016 18:52:59 ** Checking double input images/elements

 20-07-2016 18:52:59 ** Starting hierarchical ascendant classification
                        Output will be once every 500 items (images)
                        (4053 items in total)

 20-07-2016 18:52:59 ** Working on item (image) # 1

 20-07-2016 18:53:00 ** Working on item (image) # 501

 20-07-2016 18:53:01 ** Working on item (image) # 1001

 20-07-2016 18:53:01 ** Working on item (image) # 1501

 20-07-2016 18:53:02 ** Working on item (image) # 2001

 20-07-2016 18:53:02 ** Working on item (image) # 2501

 20-07-2016 18:53:03 ** Working on item (image) # 3001

 20-07-2016 18:53:03 ** Working on item (image) # 3501

 20-07-2016 18:53:03 ** Working on item (image) # 4001

 20-07-2016 18:53:03 ** Working on item (image) # 4052

 20-07-2016 18:53:03 ** Finished hierarchical ascendant classification

 20-07-2016 18:53:03 ** Refining the partition by moving elements

 Partition stabilized after 6 iteration(s)
 Total sum of intra-class variances prior to reclassification : 95.2812045
 Total sum of intra-class variances after reclassification    : 91.3431017
 Change of intra-class variances during reclassification      : 4.133137 %

 20-07-2016 18:53:03 ** Going to print the partition

 20-07-2016 18:53:04 ** Classification finished normally
 
 
 The results have been stored in the following files:
 ====================================================
 
 Text (listing) file
 with classification results           : classes-2-200.lis
 
 File containing
 all classes and their members         : classes-2-200.cls
 
 File containing plots
 showing variance related to classes   : classes-2-200_variance.plt
 File containing
 plots showing variance changes        : classes-2-200_variance_classify.plt
 
 Image file containing
 metric and coordinates of the classes : classes-2-200_coord_metric
 
 
 Some useful IMAGIC commands:
 ============================
 
 MSA-SUM           to calculate class averages (class-sums)
 MSA-MAP           to calculate classification maps
 MSA-EXTRACT       to extract "images" of certain classes
 MSA-EIGEN-FILTER  to eigen filter the input "images"
 
 
Next IMAGIC command suggested: MSA-SUM
! 
! IMAGIC program: classum ----------------------------------------------
! 

 20-07-2016 18:53:04 ** CLASSUM (vs. 5-Feb-2014) running **
  
Input images to be summed [my_ali]                 :  all-alig2
Rootname of MSA-CLASSIFY results [my_classify]     :  classes-2-200
Output class averages [my_classums]                :  classums-2-200
Down weight small classes [YES]                    :  YES
Fraction of worst class members to ignore [0]      :  0
 
Mode of summing statistics:
  NONE  VARIANCE  S-IMAGE  I-IMAGE  FT
Please specify option [NONE]                       :  NONE

 20-07-2016 18:53:04 ** 4053 elements found in 200 classes

 20-07-2016 18:53:05 ** Working on class # 1
 
Image name: Class-sums from all-alig2 using classes-2-200.cls
Size: 100, 100  Loc: 1  Type: REAL  Cre.Date: 20-Jul-2016  Time: 18:53:05
EM2EM;ALIMASS/TOTCENTER;MRALIGN/ALIGN(18REFS);MRALIGN/ALIGN(18REFS);MSA;CLASSU
M/SUMS;

 20-07-2016 18:53:05 ** Working on class # 11

 20-07-2016 18:53:05 ** Working on class # 21

 20-07-2016 18:53:05 ** Working on class # 31

 20-07-2016 18:53:05 ** Working on class # 41

 20-07-2016 18:53:05 ** Working on class # 51

 20-07-2016 18:53:05 ** Working on class # 61

 20-07-2016 18:53:05 ** Working on class # 71

 20-07-2016 18:53:05 ** Working on class # 81

 20-07-2016 18:53:05 ** Working on class # 91

 20-07-2016 18:53:05 ** Working on class # 101

 20-07-2016 18:53:05 ** Working on class # 111

 20-07-2016 18:53:05 ** Working on class # 121

 20-07-2016 18:53:05 ** Working on class # 131

 20-07-2016 18:53:05 ** Working on class # 141

 20-07-2016 18:53:06 ** Working on class # 151

 20-07-2016 18:53:06 ** Working on class # 161

 20-07-2016 18:53:06 ** Working on class # 171

 20-07-2016 18:53:06 ** Working on class # 181

 20-07-2016 18:53:06 ** Working on class # 191
 
Image name: Class-sums from all-alig2 using classes-2-200.cls
Size: 100, 100  Loc: 1  Type: REAL  Cre.Date: 20-Jul-2016  Time: 18:53:06
EM2EM;ALIMASS/TOTCENTER;MRALIGN/ALIGN(18REFS);MRALIGN/ALIGN(18REFS);MSA;CLASSU
M/SUMS;

 20-07-2016 18:53:06 ** Finished CLASSUM
 
 
 The results have been stored in the following files:
 ====================================================
 
 Class-sums (averages) file  : classums-2-200
 
 
 Some useful IMAGIC commands:
 ============================
 
 DISPLAY        to display the class averages
 MSA-MAP        to calculate classification maps
 MSA-EXTRACT    to extract images of certain classes
 EXCLUSIVE-COPY to SORT the class averages by quality
 
 
Next IMAGIC command suggested: DISPLAY
! 
! IMAGIC program: classify ---------------------------------------------
! 

 20-07-2016 18:53:06 ** CLASSIFY (vs. 21-Feb-2014) running **
  
 
Input to be classified:
  IMAGES/VOLUMES   PIXEL-VECTORS    SEQUENCES
  FABOSA-CONTOURS
Please specify option [IMAGES/VOLUMES]             :  IMAGES/VOLUMES
Input (=output) header file (used in MSA-RUN)
[my_ali]                                           :  all-alig2
Percentage of images to be ignored [0]             :  0
Active eigenimages for classification [100]        :  10
Use default classification options [YES]           :  YES
What number of classes do you wish                 :  100
Rootname of output files [my_classify]             :  classes-2-100

 20-07-2016 18:53:06 ** Reading eigenvalues/eigenimages and coordinates
 
                        Number of eigenimages in file = 50
                        Number of eigenimages wanted  = 10

 20-07-2016 18:53:07 ** Finding first distance matrix

 20-07-2016 18:53:07 ** Checking double input images/elements

 20-07-2016 18:53:07 ** Starting hierarchical ascendant classification
                        Output will be once every 500 items (images)
                        (4053 items in total)

 20-07-2016 18:53:07 ** Working on item (image) # 1

 20-07-2016 18:53:07 ** Working on item (image) # 501

 20-07-2016 18:53:07 ** Working on item (image) # 1001

 20-07-2016 18:53:08 ** Working on item (image) # 1501

 20-07-2016 18:53:08 ** Working on item (image) # 2001

 20-07-2016 18:53:08 ** Working on item (image) # 2501

 20-07-2016 18:53:08 ** Working on item (image) # 3001

 20-07-2016 18:53:08 ** Working on item (image) # 3501

 20-07-2016 18:53:08 ** Working on item (image) # 4001

 20-07-2016 18:53:08 ** Working on item (image) # 4052

 20-07-2016 18:53:08 ** Finished hierarchical ascendant classification

 20-07-2016 18:53:08 ** Refining the partition by moving elements

 Partition stabilized after 9 iteration(s)
 Total sum of intra-class variances prior to reclassification : 29.101068
 Total sum of intra-class variances after reclassification    : 26.9895904
 Change of intra-class variances during reclassification      : 7.2556707 %

 20-07-2016 18:53:08 ** Going to print the partition

 20-07-2016 18:53:09 ** Classification finished normally
 
 
 The results have been stored in the following files:
 ====================================================
 
 Text (listing) file
 with classification results           : classes-2-100.lis
 
 File containing
 all classes and their members         : classes-2-100.cls
 
 File containing plots
 showing variance related to classes   : classes-2-100_variance.plt
 File containing
 plots showing variance changes        : classes-2-100_variance_classify.plt
 
 Image file containing
 metric and coordinates of the classes : classes-2-100_coord_metric
 
 
 Some useful IMAGIC commands:
 ============================
 
 MSA-SUM           to calculate class averages (class-sums)
 MSA-MAP           to calculate classification maps
 MSA-EXTRACT       to extract "images" of certain classes
 MSA-EIGEN-FILTER  to eigen filter the input "images"
 
 
Next IMAGIC command suggested: MSA-SUM
! 
! IMAGIC program: classum ----------------------------------------------
! 

 20-07-2016 18:53:09 ** CLASSUM (vs. 5-Feb-2014) running **
  
Input images to be summed [my_ali]                 :  all-alig2
Rootname of MSA-CLASSIFY results [my_classify]     :  classes-2-100
Output class averages [my_classums]                :  classums-2-100
Down weight small classes [YES]                    :  YES
Fraction of worst class members to ignore [0]      :  0
 
Mode of summing statistics:
  NONE  VARIANCE  S-IMAGE  I-IMAGE  FT
Please specify option [NONE]                       :  NONE

 20-07-2016 18:53:09 ** 4053 elements found in 100 classes

 20-07-2016 18:53:10 ** Working on class # 1
 
Image name: Class-sums from all-alig2 using classes-2-100.cls
Size: 100, 100  Loc: 1  Type: REAL  Cre.Date: 20-Jul-2016  Time: 18:53:10
EM2EM;ALIMASS/TOTCENTER;MRALIGN/ALIGN(18REFS);MRALIGN/ALIGN(18REFS);MSA;CLASSU
M/SUMS;

 20-07-2016 18:53:10 ** Working on class # 2

 20-07-2016 18:53:10 ** Working on class # 3

 20-07-2016 18:53:10 ** Working on class # 4

 20-07-2016 18:53:10 ** Working on class # 5

 20-07-2016 18:53:10 ** Working on class # 6

 20-07-2016 18:53:10 ** Working on class # 7

 20-07-2016 18:53:10 ** Working on class # 8

 20-07-2016 18:53:10 ** Working on class # 9

 20-07-2016 18:53:10 ** Working on class # 10

 20-07-2016 18:53:10 ** Working on class # 11

 20-07-2016 18:53:10 ** Working on class # 12

 20-07-2016 18:53:10 ** Working on class # 13

 20-07-2016 18:53:10 ** Working on class # 14

 20-07-2016 18:53:10 ** Working on class # 15

 20-07-2016 18:53:10 ** Working on class # 16

 20-07-2016 18:53:10 ** Working on class # 17

 20-07-2016 18:53:10 ** Working on class # 18

 20-07-2016 18:53:10 ** Working on class # 19

 20-07-2016 18:53:10 ** Working on class # 20

 20-07-2016 18:53:10 ** Working on class # 21

 20-07-2016 18:53:10 ** Working on class # 22

 20-07-2016 18:53:10 ** Working on class # 23

 20-07-2016 18:53:10 ** Working on class # 24

 20-07-2016 18:53:10 ** Working on class # 25

 20-07-2016 18:53:10 ** Working on class # 26

 20-07-2016 18:53:10 ** Working on class # 27

 20-07-2016 18:53:10 ** Working on class # 28

 20-07-2016 18:53:10 ** Working on class # 29

 20-07-2016 18:53:10 ** Working on class # 30

 20-07-2016 18:53:10 ** Working on class # 31

 20-07-2016 18:53:10 ** Working on class # 32

 20-07-2016 18:53:10 ** Working on class # 33

 20-07-2016 18:53:10 ** Working on class # 34

 20-07-2016 18:53:10 ** Working on class # 35

 20-07-2016 18:53:10 ** Working on class # 36

 20-07-2016 18:53:10 ** Working on class # 37

 20-07-2016 18:53:10 ** Working on class # 38

 20-07-2016 18:53:10 ** Working on class # 39

 20-07-2016 18:53:10 ** Working on class # 40

 20-07-2016 18:53:10 ** Working on class # 41

 20-07-2016 18:53:10 ** Working on class # 42

 20-07-2016 18:53:10 ** Working on class # 43

 20-07-2016 18:53:10 ** Working on class # 44

 20-07-2016 18:53:10 ** Working on class # 45

 20-07-2016 18:53:10 ** Working on class # 46

 20-07-2016 18:53:10 ** Working on class # 47

 20-07-2016 18:53:10 ** Working on class # 48

 20-07-2016 18:53:10 ** Working on class # 49

 20-07-2016 18:53:10 ** Working on class # 50

 20-07-2016 18:53:10 ** Working on class # 51

 20-07-2016 18:53:10 ** Working on class # 52

 20-07-2016 18:53:10 ** Working on class # 53

 20-07-2016 18:53:10 ** Working on class # 54

 20-07-2016 18:53:10 ** Working on class # 55

 20-07-2016 18:53:10 ** Working on class # 56

 20-07-2016 18:53:10 ** Working on class # 57

 20-07-2016 18:53:10 ** Working on class # 58

 20-07-2016 18:53:10 ** Working on class # 59

 20-07-2016 18:53:10 ** Working on class # 60

 20-07-2016 18:53:10 ** Working on class # 61

 20-07-2016 18:53:10 ** Working on class # 62

 20-07-2016 18:53:10 ** Working on class # 63

 20-07-2016 18:53:10 ** Working on class # 64

 20-07-2016 18:53:10 ** Working on class # 65

 20-07-2016 18:53:10 ** Working on class # 66

 20-07-2016 18:53:10 ** Working on class # 67

 20-07-2016 18:53:10 ** Working on class # 68

 20-07-2016 18:53:10 ** Working on class # 69

 20-07-2016 18:53:10 ** Working on class # 70

 20-07-2016 18:53:10 ** Working on class # 71

 20-07-2016 18:53:10 ** Working on class # 72

 20-07-2016 18:53:10 ** Working on class # 73

 20-07-2016 18:53:10 ** Working on class # 74

 20-07-2016 18:53:10 ** Working on class # 75

 20-07-2016 18:53:10 ** Working on class # 76

 20-07-2016 18:53:10 ** Working on class # 77

 20-07-2016 18:53:10 ** Working on class # 78

 20-07-2016 18:53:10 ** Working on class # 79

 20-07-2016 18:53:10 ** Working on class # 80

 20-07-2016 18:53:10 ** Working on class # 81

 20-07-2016 18:53:10 ** Working on class # 82

 20-07-2016 18:53:10 ** Working on class # 83

 20-07-2016 18:53:10 ** Working on class # 84

 20-07-2016 18:53:10 ** Working on class # 85

 20-07-2016 18:53:10 ** Working on class # 86

 20-07-2016 18:53:10 ** Working on class # 87

 20-07-2016 18:53:10 ** Working on class # 88

 20-07-2016 18:53:10 ** Working on class # 89

 20-07-2016 18:53:10 ** Working on class # 90

 20-07-2016 18:53:10 ** Working on class # 91

 20-07-2016 18:53:10 ** Working on class # 92

 20-07-2016 18:53:10 ** Working on class # 93

 20-07-2016 18:53:10 ** Working on class # 94

 20-07-2016 18:53:10 ** Working on class # 95

 20-07-2016 18:53:10 ** Working on class # 96

 20-07-2016 18:53:10 ** Working on class # 97

 20-07-2016 18:53:10 ** Working on class # 98

 20-07-2016 18:53:10 ** Working on class # 99

 20-07-2016 18:53:10 ** Working on class # 100
 
Image name: Class-sums from all-alig2 using classes-2-100.cls
Size: 100, 100  Loc: 1  Type: REAL  Cre.Date: 20-Jul-2016  Time: 18:53:10
EM2EM;ALIMASS/TOTCENTER;MRALIGN/ALIGN(18REFS);MRALIGN/ALIGN(18REFS);MSA;CLASSU
M/SUMS;

 20-07-2016 18:53:11 ** Finished CLASSUM
 
 
 The results have been stored in the following files:
 ====================================================
 
 Class-sums (averages) file  : classums-2-100
 
 
 Some useful IMAGIC commands:
 ============================
 
 DISPLAY        to display the class averages
 MSA-MAP        to calculate classification maps
 MSA-EXTRACT    to extract images of certain classes
 EXCLUSIVE-COPY to SORT the class averages by quality
 
 
Next IMAGIC command suggested: DISPLAY
! 
! IMAGIC program: classify ---------------------------------------------
! 

 20-07-2016 18:53:11 ** CLASSIFY (vs. 21-Feb-2014) running **
  
 
Input to be classified:
  IMAGES/VOLUMES   PIXEL-VECTORS    SEQUENCES
  FABOSA-CONTOURS
Please specify option [IMAGES/VOLUMES]             :  IMAGES/VOLUMES
Input (=output) header file (used in MSA-RUN)
[my_ali]                                           :  all-alig2
Percentage of images to be ignored [0]             :  0
Active eigenimages for classification [100]        :  10
Use default classification options [YES]           :  YES
What number of classes do you wish                 :  150
Rootname of output files [my_classify]             :  classes-2-150

 20-07-2016 18:53:11 ** Reading eigenvalues/eigenimages and coordinates
 
                        Number of eigenimages in file = 50
                        Number of eigenimages wanted  = 10

 20-07-2016 18:53:12 ** Finding first distance matrix

 20-07-2016 18:53:12 ** Checking double input images/elements

 20-07-2016 18:53:12 ** Starting hierarchical ascendant classification
                        Output will be once every 500 items (images)
                        (4053 items in total)

 20-07-2016 18:53:12 ** Working on item (image) # 1

 20-07-2016 18:53:12 ** Working on item (image) # 501

 20-07-2016 18:53:12 ** Working on item (image) # 1001

 20-07-2016 18:53:13 ** Working on item (image) # 1501

 20-07-2016 18:53:13 ** Working on item (image) # 2001

 20-07-2016 18:53:13 ** Working on item (image) # 2501

 20-07-2016 18:53:13 ** Working on item (image) # 3001

 20-07-2016 18:53:13 ** Working on item (image) # 3501

 20-07-2016 18:53:13 ** Working on item (image) # 4001

 20-07-2016 18:53:13 ** Working on item (image) # 4052

 20-07-2016 18:53:13 ** Finished hierarchical ascendant classification

 20-07-2016 18:53:13 ** Refining the partition by moving elements

 Partition stabilized after 9 iteration(s)
 Total sum of intra-class variances prior to reclassification : 23.2936785
 Total sum of intra-class variances after reclassification    : 21.6362989
 Change of intra-class variances during reclassification      : 7.1151474 %

 20-07-2016 18:53:13 ** Going to print the partition

 20-07-2016 18:53:14 ** Classification finished normally
 
 
 The results have been stored in the following files:
 ====================================================
 
 Text (listing) file
 with classification results           : classes-2-150.lis
 
 File containing
 all classes and their members         : classes-2-150.cls
 
 File containing plots
 showing variance related to classes   : classes-2-150_variance.plt
 File containing
 plots showing variance changes        : classes-2-150_variance_classify.plt
 
 Image file containing
 metric and coordinates of the classes : classes-2-150_coord_metric
 
 
 Some useful IMAGIC commands:
 ============================
 
 MSA-SUM           to calculate class averages (class-sums)
 MSA-MAP           to calculate classification maps
 MSA-EXTRACT       to extract "images" of certain classes
 MSA-EIGEN-FILTER  to eigen filter the input "images"
 
 
Next IMAGIC command suggested: MSA-SUM
! 
! IMAGIC program: classum ----------------------------------------------
! 

 20-07-2016 18:53:14 ** CLASSUM (vs. 5-Feb-2014) running **
  
Input images to be summed [my_ali]                 :  all-alig2
Rootname of MSA-CLASSIFY results [my_classify]     :  classes-2-150
Output class averages [my_classums]                :  classums-2-150
Down weight small classes [YES]                    :  YES
Fraction of worst class members to ignore [0]      :  0
 
Mode of summing statistics:
  NONE  VARIANCE  S-IMAGE  I-IMAGE  FT
Please specify option [NONE]                       :  NONE

 20-07-2016 18:53:14 ** 4053 elements found in 150 classes

 20-07-2016 18:53:15 ** Working on class # 1
 
Image name: Class-sums from all-alig2 using classes-2-150.cls
Size: 100, 100  Loc: 1  Type: REAL  Cre.Date: 20-Jul-2016  Time: 18:53:15
EM2EM;ALIMASS/TOTCENTER;MRALIGN/ALIGN(18REFS);MRALIGN/ALIGN(18REFS);MSA;CLASSU
M/SUMS;

 20-07-2016 18:53:15 ** Working on class # 11

 20-07-2016 18:53:15 ** Working on class # 21

 20-07-2016 18:53:15 ** Working on class # 31

 20-07-2016 18:53:15 ** Working on class # 41

 20-07-2016 18:53:15 ** Working on class # 51

 20-07-2016 18:53:15 ** Working on class # 61

 20-07-2016 18:53:15 ** Working on class # 71

 20-07-2016 18:53:15 ** Working on class # 81

 20-07-2016 18:53:15 ** Working on class # 91

 20-07-2016 18:53:15 ** Working on class # 101

 20-07-2016 18:53:15 ** Working on class # 111

 20-07-2016 18:53:15 ** Working on class # 121

 20-07-2016 18:53:16 ** Working on class # 131

 20-07-2016 18:53:16 ** Working on class # 141
 
Image name: Class-sums from all-alig2 using classes-2-150.cls
Size: 100, 100  Loc: 1  Type: REAL  Cre.Date: 20-Jul-2016  Time: 18:53:16
EM2EM;ALIMASS/TOTCENTER;MRALIGN/ALIGN(18REFS);MRALIGN/ALIGN(18REFS);MSA;CLASSU
M/SUMS;

 20-07-2016 18:53:16 ** Finished CLASSUM
 
 
 The results have been stored in the following files:
 ====================================================
 
 Class-sums (averages) file  : classums-2-150
 
 
 Some useful IMAGIC commands:
 ============================
 
 DISPLAY        to display the class averages
 MSA-MAP        to calculate classification maps
 MSA-EXTRACT    to extract images of certain classes
 EXCLUSIVE-COPY to SORT the class averages by quality
 
 
Next IMAGIC command suggested: DISPLAY
